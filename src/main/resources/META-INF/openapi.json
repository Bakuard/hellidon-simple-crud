{
  "openapi": "3.0.0",
  "info": {
    "title": "Students service",
    "description": "Students service",
    "version": "0.1.0"
  },
  "paths": {
    "/groups/new": {
      "post": {
        "tags": ["Группы"],
        "summary": "Добавляет новую группу",
        "requestBody": {
          "description": "Данные новой группы",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Группа успешно добавлена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/newGroupRequest"
                }
              }
            }
          },
          "400": {
            "description": "Наименование группы не уникально",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "tags": ["Группы"],
        "summary": "Возвращает группу по её идентификатору",
        "description": "Возвращает подробные данные группы по её id. Если группы с таким id не существует - возвращает ошибку.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Учетные данные корректны",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/newGroupRequest"
                }
              }
            }
          },
          "404": {
            "description": "Не удалось найти группу с указанным id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": ["Группы"],
        "summary": "Возвращает неколько групп",
        "description": "Возвращает неколько групп отсортированных по id.",
        "parameters": [
          {
            "description": "Принимает целые значения от 0 и выше",
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Принимает целые значения от 1 и выше",
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Выборка из групп отсортированных по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/groupsPageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/students/new": {
      "post": {
        "tags": ["Студенты"],
        "summary": "Добавляет нового студента",
        "requestBody": {
          "description": "Данные нового студента",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newStudentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Студент успешно добавлен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Комбинация имени, фамилии и отчества студента не уникальна.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/studnets/{id}": {
      "get": {
        "tags": ["Студенты"],
        "summary": "Возвращает студента по его идентификатору",
        "description": "Возвращает подробные данные студента по его id. Если студента с таким id не существует - возвращает ошибку.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Учетные данные корректны",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/newStudentRequest"
                }
              }
            }
          },
          "404": {
            "description": "Не удалось найти студента с указанным id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/students": {
      "get": {
        "tags": ["Студенты"],
        "summary": "Возвращает неколько студентов",
        "description": "Возвращает неколько студентов отсортированных по id.",
        "parameters": [
          {
            "description": "Принимает целые значения от 0 и выше",
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Принимает целые значения от 1 и выше",
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Выборка из студентов отсортированных по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/studentsPageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/students/delete/{id}": {
      "delete": {
        "tags": ["Студенты"],
        "summary": "Удаляет студента",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Студент успешно удален",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Не удалось найти студента с указанным id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "pageMetaResponse": {
        "description": "Метаданные страницы, такие как номер, размер, и т.д. Также сюда входят данные об искомой выборке, например: общее кол-во элементов выборки, общее кол-во страниц, на которую эту выборку можно разбить и т.д.",
        "type": "object",
        "properties": {
          "pageSize": {
            "description": "Размер страницы заданный при запросе",
            "type": "number"
          },
          "pageNumber": {
            "description": "Номер страницы",
            "type": "number"
          },
          "totalItems": {
            "description": "Общее кол-во элементов искомой выборки",
            "type": "number"
          },
          "totalPages": {
            "description": "Общее кол-во страниц, на которую можно разбить искомую выборку. Рассчитывается с учетом задаваемого размера страницы.",
            "type": "number"
          },
          "lastPageNumber": {
            "description": "Номер последней страницы в искомой выборке.",
            "type": "number"
          }
        }
      },
      "errorResponse": {
        "description": "Общий формат для всех ошибок отправляемых сервисом.",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "examples": ["yyyy-MM-dd hh:mm:ss.SSS"]
          },
          "httpErrorCode": {
            "type": "number",
            "examples": ["400"]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "newGroupRequest": {
        "description": "Данные новой добавляемой группы",
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименования группы. Имя группы должно быть уникальным."
          }
        }
      },
      "groupResponse": {
        "description": "Возвращаемые данные об одной конкретной группе",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "уникальный идентификатор группы"
          },
          "name": {
            "type": "string",
            "description": "Наименования группы."
          }
        }
      },
      "groupsPageResponse": {
        "description": "Возвращаемая выборка из всех групп отсортированных по идентификатору.",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/pageMetaResponse"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/groupResponse"
            }
          }
        }
      },
      "newStudentRequest": {
        "description": "Данные нового добавляемого студента",
        "type": "object",
        "required": ["firstName", "secondName", "middleName", "birthday"],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Имя"
          },
          "secondName": {
            "type": "string",
            "description": "Фамилия"
          },
          "middleName": {
            "type": "string",
            "description": "Отчество"
          },
          "birthday": {
            "type": "string",
            "description": "Дата рождения"
          },
          "groupId": {
            "type": "number",
            "description": "Идентификатор группы, в которой учится студент"
          }
        }
      },
      "deleteStudentRequest": {
        "description": "Данные идентифицирующие удаляемого студента",
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "number",
            "description": "Идентификатор студента"
          }
        }
      },
      "studentResponse": {
        "description": "Возвращаемые данные об одном конкретном студенте.",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "description": "Идентификатор студента"
          },
          "firstName": {
            "type": "string",
            "description": "Имя"
          },
          "secondName": {
            "type": "string",
            "description": "Фамилия"
          },
          "middleName": {
            "type": "string",
            "description": "Отчество"
          },
          "birthday": {
            "type": "string",
            "description": "Год рождения"
          },
          "group": {
            "$ref": "#/components/schemas/groupResponse"
          }
        }
      },
      "studentsPageResponse": {
        "description": "Возвращаемая выборка из всех студентов отсортированных по идентификатору.",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/pageMetaResponse"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/groupResponse"
            }
          }
        }
      }
    }
  }
}